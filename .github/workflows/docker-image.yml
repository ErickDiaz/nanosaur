name: Docker Builder CI

# Reference:
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on: [push, workflow_dispatch]

# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

# https://github.com/docker/build-push-action
jobs:

  # https://github.com/docker/build-push-action/issues/225
  docker:
    name: "Build Docker image develop"
    runs-on: ubuntu-latest #self-hosted
    steps:
    # https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md
    - name: Docker meta
      id: meta
      uses: crazy-max/ghaction-docker-meta@v3.7.0
      with:
        images: nanosaur/nanosaur
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=ref,event=tag
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1.14.1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2.10.0
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/arm64
    - name: Docker Image digest
      run: |
        echo ${{ steps.docker_build.outputs.digest }}

  export:
    name: Make all artifacts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build project
      run: |
        bash nanosaur_description/scripts/nanosaur_stl.sh
    - name: upload data
      uses: actions/upload-artifact@v2
      with:
        name: data
        path: |
          nanosaur_stl.zip
          nanosaur_description/meshes/datasheet/nanosaur-powerbank.pdf
          nanosaur_description/meshes/datasheet/nanosaur-size.pdf

  update_docker_description:
    name: Update docker description
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker Hub Description # https://github.com/peter-evans/dockerhub-description
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        repository: nanosaur/nanosaur
        short-description: ${{ github.event.repository.description }}
        readme-filepath: ./README.md

  release_stl:
    name: Upload release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [export]
    steps:
    - name: Extract tag name
      id: extract_tag
      shell: bash
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
    - name: Extract artifact
      uses: actions/download-artifact@v2
      with:
        name: data
    - name: Release # https://github.com/softprops/action-gh-release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.extract_tag.outputs.tag }}
        generate_release_notes: true
        draft: false
        prerelease: false
        files: |
          nanosaur_stl.zip
          nanosaur-powerbank.pdf
          nanosaur-size.pdf

  notify:
    name: "Notify socials"
    needs: [release_stl, update_docker_description]
    runs-on: ubuntu-latest
    steps:
      # https://github.community/t/how-to-get-just-the-tag-name/16241/11
    - name: Extract tag name
      id: extract_tag
      shell: bash
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'The project **{{ EVENT_PAYLOAD.repository.full_name }}** has been deployed v${{ steps.extract_tag.outputs.tag }}.'
